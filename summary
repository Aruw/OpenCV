#Import OpenCV to the project
import cv2

# ----------------------------------  Metodos principais
#Carrega a image
cv2.imshow("dir/file.jpg")

#Exibe a imagem
cv2.imshow("Titulo da janela", imagem)

#Sava a imagem
cv2.imwrite("dir/file.jpg", imagem)

#Aguarda X-milisegundos quando uma tecla é pressionada
cv2.waitKey(miliseconds)

#Fecha todas as janelas
cv2.destroyAllWindows()

#Retorna as dimensões da imagem
height, width, channels = image.shape

# ----------------------------------  Conversão de Espaços de Cor
#BRG para Cinza (gray)
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

#BGR para HSV
hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

#BGR para LAB
lab = cv2.cvtColor(image, cv2.COLOR_BGR2LAB)

# ----------------------------------  Desenhar Formas
#Adicionar Texto (putText)
cv2.putText(image, "Texto da imagem", (15,15), cv2.FONT_HERSHEY_SIMPLEX, 2, (255, 255, 255), 2, cv2.LINE_AA)
              #img, text, org, fontFace, fontScale, color, thickness, lineType, bottomLeftOrigin

#Desenhar Linha (line)
cv2.line(image, (0, 0), (300, 300), (0, 255, 0), 3)

#Desenha Retangulo (rectangle)
cv2.rectangle(image, (15, 15), (300, 300), (0, 255, 0), 3)

#Desenha Circulo (circle)
cv2.circle(image, (150, 150), 150, (0,0,255), -1)

#Desenhar Elipse (ellipse)
cv2.ellipse(image, (256,256), (100,50), 0, 0, 180, 255, -1)

#Desenhar Poligono (polylines)
pts = np.array([[10,5],[20,30],[70,20],[50,10]], np.int32)
pts = pts.reshape((-1,1,2))
cv2.polylines(img,[pts],True,(0,255,255))

# ----------------------------------  Transformações Geometricas
#Rotaciona a Imagem (rotate)
M = cv2.getRotationMatrix2D((width//2, height//2), 45, 1.0)
rotated = cv2.warpAffine(image, M, (width, height))

#Translação (shift)
M = np.float32([[1, 0, 25], [0, 1, 50]])  #Define o shift da imagem 25 pixels para a direita e 50 pixels para baixo.
shifted = cv2.warpAffine(image, M, (width, height))

#Redimensionar (resize)
r = 150.0 / image.shape[1]
dim = (150, int(image.shape[0] * r))  #Referente ao o "aspect ratio" da imagem. 
resized = cv2.resize(image, dim, interpolation = cv2.INTER_AREA)

# ----------------------------------  Operações com Arrays
#Inverter (flip)
flipped = cv2.flip(image, 1)

#Adicionar (add)
added = cv2.add(image, filter)

#Subtrair (subtract)
subtracted = cv2.subtract(image, filter)

#BitwiseAnd 
bitwiseAnd = cv2.bitwise_and(rectangle, circle)

#BitwiseOr
bitwiseOr = cv2.bitwise_or(rectangle, circle)

#BitwiseXor
bitwiseXor = cv2.bitwise_xor(rectangle, circle)

#BitwiseNot
bitwiseNot = cv2.bitwise_not(circle)

#Mascara (mask)
masked = cv2.bitwise_and(image, image, mask = mask)

#Separar canais (split)
(B, G, R) = cv2.split(image)

#Juntar os canais (merge)
merged = cv2.merge([B, G, R])



